#usda 1.0
(
    defaultPrim = "World"
    endTimeCode = 100
    metersPerUnit = 0.01
    startTimeCode = 0
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "World"
{
    def Mesh "Cube" (
        prepend apiSchemas = ["ShadowAPI", "MaterialBindingAPI"]
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-1.4933333, -25.133137, -1.4933333), (1.4933333, 0.5, 1.4933333)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 20, 21, 22, 23, 1, 7, 5, 3, 6, 0, 2, 4, 6, 7, 9, 8, 7, 1, 10, 9, 1, 0, 11, 10, 0, 6, 8, 11, 8, 9, 13, 12, 9, 10, 14, 13, 10, 11, 15, 14, 11, 8, 12, 15, 12, 13, 17, 16, 13, 14, 18, 17, 14, 15, 19, 18, 15, 12, 16, 19, 16, 17, 21, 20, 17, 18, 22, 21, 18, 19, 23, 22, 19, 16, 20, 23]
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5), (-0.19999999, -0.5, -0.19999999), (0.19999999, -0.5, -0.19999999), (0.19999999, -0.5, 0.19999999), (-0.19999999, -0.5, 0.19999999), (-0.19999999, -24.778801, -0.19999999), (0.19999999, -24.778801, -0.19999999), (0.19999999, -24.778801, 0.19999999), (-0.19999999, -24.778801, 0.19999999), (-1.4933333, -24.778801, -1.4933333), (1.4933333, -24.778801, -1.4933333), (1.4933333, -24.778801, 1.4933333), (-1.4933333, -24.778801, 1.4933333), (-1.4933333, -25.133137, -1.4933333), (1.4933333, -25.133137, -1.4933333), (1.4933333, -25.133137, 1.4933333), (-1.4933333, -25.133137, 1.4933333)]
        color3f[] primvars:displayColor = [(0.4, 0.4, 0.4), (0.4, 0.4, 0.4)] (
            customData = {
                dictionary Maya = {
                    bool generated = 1
                }
            }
            interpolation = "uniform"
        )
        int[] primvars:displayColor:indices = [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        float[] primvars:displayOpacity = [1, 1] (
            customData = {
                dictionary Maya = {
                    bool generated = 1
                }
            }
            interpolation = "uniform"
        )
        int[] primvars:displayOpacity:indices = [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        texCoord2f[] primvars:st = [(0.375, 0), (0.625, 0), (0.375, 0.25), (0.625, 0.25), (0.375, 0.5), (0.625, 0.5), (0.375, 0.75), (0.625, 0.75), (0.375, 1), (0.625, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25), (0.375, 0.75), (0.625, 0.75), (0.625, 1), (0.375, 1), (0.375, 0.75), (0.625, 0.75), (0.625, 1), (0.375, 1), (0.375, 0.75), (0.625, 0.75), (0.625, 1), (0.375, 1), (0.375, 0.75), (0.625, 0.75), (0.625, 1), (0.375, 1)] (
            customData = {
                dictionary Maya = {
                    int UVSetIndex = 0
                }
            }
            interpolation = "faceVarying"
        )
        int[] primvars:st:indices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 26, 27, 28, 29, 1, 10, 11, 3, 12, 0, 2, 13, 6, 7, 15, 14, 7, 9, 16, 15, 9, 8, 17, 16, 8, 6, 14, 17, 14, 15, 19, 18, 15, 16, 20, 19, 16, 17, 21, 20, 17, 14, 18, 21, 18, 19, 23, 22, 19, 20, 24, 23, 20, 21, 25, 24, 21, 18, 22, 25, 22, 23, 27, 26, 23, 24, 28, 27, 24, 25, 29, 28, 25, 22, 26, 29]
        bool shadow:enable = 1
        uniform token subdivisionScheme = "none"
        uniform token subsetFamily:materialBind:familyType = "partition"
        double3 xformOp:translate = (0, 25.211780502146404, 225)
        uniform token[] xformOpOrder = ["xformOp:translate"]

        def GeomSubset "subset"
        {
            uniform token elementType = "indices"
            uniform token familyName = ""
            int[] indices = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
            rel material:binding = </World/Looks/MatX>

            def Material "MatX"
            {
                token outputs:mdl:surface.connect = </World/Looks/MatX/Shader.outputs:out>

                def Shader "Shader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @./Materials/material.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "MatX"
                    token outputs:out
                }
            }
        }
    }

    def Mesh "Cube2" (
        prepend apiSchemas = ["ShadowAPI"]
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-1.4933333, -25.133137, -1.4933333), (1.4933333, 0.5, 1.4933333)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 20, 21, 22, 23, 1, 7, 5, 3, 6, 0, 2, 4, 6, 7, 9, 8, 7, 1, 10, 9, 1, 0, 11, 10, 0, 6, 8, 11, 8, 9, 13, 12, 9, 10, 14, 13, 10, 11, 15, 14, 11, 8, 12, 15, 12, 13, 17, 16, 13, 14, 18, 17, 14, 15, 19, 18, 15, 12, 16, 19, 16, 17, 21, 20, 17, 18, 22, 21, 18, 19, 23, 22, 19, 16, 20, 23]
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5), (-0.19999999, -0.5, -0.19999999), (0.19999999, -0.5, -0.19999999), (0.19999999, -0.5, 0.19999999), (-0.19999999, -0.5, 0.19999999), (-0.19999999, -24.778801, -0.19999999), (0.19999999, -24.778801, -0.19999999), (0.19999999, -24.778801, 0.19999999), (-0.19999999, -24.778801, 0.19999999), (-1.4933333, -24.778801, -1.4933333), (1.4933333, -24.778801, -1.4933333), (1.4933333, -24.778801, 1.4933333), (-1.4933333, -24.778801, 1.4933333), (-1.4933333, -25.133137, -1.4933333), (1.4933333, -25.133137, -1.4933333), (1.4933333, -25.133137, 1.4933333), (-1.4933333, -25.133137, 1.4933333)]
        color3f[] primvars:displayColor = [(0.4, 0.4, 0.4), (0.4, 0.4, 0.4)] (
            customData = {
                dictionary Maya = {
                    bool generated = 1
                }
            }
            interpolation = "uniform"
        )
        int[] primvars:displayColor:indices = [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        float[] primvars:displayOpacity = [1, 1] (
            customData = {
                dictionary Maya = {
                    bool generated = 1
                }
            }
            interpolation = "uniform"
        )
        int[] primvars:displayOpacity:indices = [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        texCoord2f[] primvars:st = [(0.375, 0), (0.625, 0), (0.375, 0.25), (0.625, 0.25), (0.375, 0.5), (0.625, 0.5), (0.375, 0.75), (0.625, 0.75), (0.375, 1), (0.625, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25), (0.375, 0.75), (0.625, 0.75), (0.625, 1), (0.375, 1), (0.375, 0.75), (0.625, 0.75), (0.625, 1), (0.375, 1), (0.375, 0.75), (0.625, 0.75), (0.625, 1), (0.375, 1), (0.375, 0.75), (0.625, 0.75), (0.625, 1), (0.375, 1)] (
            customData = {
                dictionary Maya = {
                    int UVSetIndex = 0
                }
            }
            interpolation = "faceVarying"
        )
        int[] primvars:st:indices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 26, 27, 28, 29, 1, 10, 11, 3, 12, 0, 2, 13, 6, 7, 15, 14, 7, 9, 16, 15, 9, 8, 17, 16, 8, 6, 14, 17, 14, 15, 19, 18, 15, 16, 20, 19, 16, 17, 21, 20, 17, 14, 18, 21, 18, 19, 23, 22, 19, 20, 24, 23, 20, 21, 25, 24, 21, 18, 22, 25, 22, 23, 27, 26, 23, 24, 28, 27, 24, 25, 29, 28, 25, 22, 26, 29]
        bool shadow:enable = 1
        uniform token subdivisionScheme = "none"
        uniform token subsetFamily:materialBind:familyType = "partition"
        double3 xformOp:translate = (0, 25.211780502146404, 225)
        uniform token[] xformOpOrder = ["xformOp:translate"]

        def GeomSubset "subset2"
        {
            uniform token elementType = "indices"
            int[] indices = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
            rel material:binding = </World/Looks/MatX>

            def Material "MatX"
            {
                token outputs:mdl:surface.connect = </World/Looks/MatX/Shader.outputs:out>

                def Shader "Shader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @./Materials/material.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "MatX"
                    token outputs:out
                }
            }
        }
    }
}